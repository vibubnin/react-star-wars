{"version":3,"sources":["components/PersonPage/PersonFilms/PersonFilms.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/PersonPage/PersonFilms/PersonFilms.jsx"],"names":["module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","withErrorApi","personFims","setErrorApi","useState","films","setFilms","useEffect","a","makeConcurrentRequest","res","className","classes","wrapper","list","sort","b","episode_id","map","title","list__item","list_episode","list__colon","list__title"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,KAAO,0BAA0B,WAAa,gCAAgC,aAAe,kCAAkC,YAAc,iCAAiC,YAAc,mC,+DCGtO,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,kFI0C/EC,uBA1CK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YACjC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAjBAC,qBAAU,WAER,sBAAC,4BAAAC,EAAA,sEACmBC,YAAsBP,GADzC,QACOQ,EADP,SAIGJ,EAASI,GACTP,GAAY,KAEZG,EAAS,IACTH,GAAY,IARf,0CAAD,KAYC,CAACD,IAIF,qBAAKS,UAAWC,IAAQC,QAAxB,SACE,oBAAIF,UAAWC,IAAQE,KAAvB,SACG,EAAIT,GACFU,MAAK,SAACP,EAAGQ,GAAJ,OAAUR,EAAES,WAAaD,EAAEC,cAChCC,KAAI,gBAAGC,EAAH,EAAGA,MAAOF,EAAV,EAAUA,WAAV,OACH,qBACEN,UAAWC,IAAQQ,WADrB,UAIE,uBAAMT,UAAWC,IAAQS,aAAzB,qBACWJ,KAEX,sBAAMN,UAAWC,IAAQU,YAAzB,iBACA,sBAAMX,UAAWC,IAAQW,YAAzB,SAAuCJ,MANlCF","file":"static/js/3.d9294f40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PersonFilms_wrapper__3WweJ\",\"list\":\"PersonFilms_list__3_Ehp\",\"list__item\":\"PersonFilms_list__item__32PKW\",\"list_episode\":\"PersonFilms_list_episode__3K1bY\",\"list__colon\":\"PersonFilms_list__colon__11Pdh\",\"list__title\":\"PersonFilms_list__title__30zmp\"};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react'\nimport { makeConcurrentRequest } from '@utils/network';\nimport { withErrorApi } from '@hoc-helpers/withErrorApi';\nimport classes from './PersonFilms.module.css';\n\nconst PersonFilms = ({ personFims, setErrorApi }) => {\n  const [films, setFilms] = useState([]);\n  useEffect(() => {\n\n    (async () => {\n      const res = await makeConcurrentRequest(personFims);\n\n      if (res) {\n        setFilms(res);\n        setErrorApi(false);\n      } else {\n        setFilms([]);\n        setErrorApi(true);\n      }\n    })();\n\n  }, [personFims]);\n\n\n  return (\n    <div className={classes.wrapper}>\n      <ul className={classes.list}>\n        {[...films]\n          .sort((a, b) => a.episode_id - b.episode_id)\n          .map(({ title, episode_id }) =>\n            <li\n              className={classes.list__item}\n              key={episode_id}\n            >\n              <span className={classes.list_episode}>\n                Episode {episode_id}\n              </span>\n              <span className={classes.list__colon}> : </span>\n              <span className={classes.list__title}>{title}</span>\n            </li>\n          )\n        }\n      </ul>\n    </div>\n  )\n}\n\nexport default withErrorApi(PersonFilms);"],"sourceRoot":""}